name: Deploy Lambda Function

# Dynamic run name showing deployment details
run-name: >-
  ${{
    github.event_name == 'workflow_dispatch' && 
    format('ðŸš€ Manual Deploy | {0} â†’ {1} | v{2}', 
      github.actor,
      github.ref_name,
      '1.0.1'
    ) ||
    github.event_name == 'push' &&
    format('ðŸ“¦ Auto Deploy | {0} | {1}',
      github.ref_name,
      github.event.head_commit.message
    ) ||
    format('ðŸ”„ Lambda Deploy | {0}',
      github.ref_name
    )
  }}

on:
  push:
    branches: [main, feature/**]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - pre
          - prod
        default: 'dev'
      force-deploy:
        description: 'Force deployment (bypass version conflicts)'
        required: false
        type: boolean
        default: false
      version:
        description: 'Version to deploy (leave empty for auto-detection)'
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy Lambda
        uses: jfarcas/lambda-deploy-action/.github/actions/lambda-deploy@main
        with:
          config-file: "lambda-deploy-config.yml"
          environment: ${{ inputs.environment || 'auto' }}
          force-deploy: ${{ inputs.force-deploy || false }}
          version: ${{ inputs.version || '' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
