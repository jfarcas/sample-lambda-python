name: Deploy Lambda

# Dynamic run name showing deployment details
run-name: >-
  ${{
    github.event_name == 'workflow_dispatch' && 
    format('🚀 Manual Deploy | {0} → {1}', 
      github.actor,
      inputs.environment
    ) ||
    github.event_name == 'push' &&
    format('📦 Auto Deploy | {0}',
      github.ref_name
    ) ||
    format('🔄 Lambda Deploy | {0}',
      github.ref_name
    )
  }}

on:
#  push:
#    branches:
#      - main
#      - 'feature/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - pre
          - prod
      force_deploy:
        description: 'Force deployment'
        required: false
        default: false
        type: boolean
      rollback_version:
        description: 'Version to rollback to (leave empty for normal deployment)'
        required: false
        type: string
      debug:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Environment Variables (if enabled)
        if: inputs.debug == true
        run: |
          echo "🐛 DEBUG: Variables and secrets available at job level:"
          echo "vars.S3_BUCKET_NAME: '${{ vars.S3_BUCKET_NAME }}'"
          echo "vars.LAMBDA_FUNCTION_NAME: '${{ vars.LAMBDA_FUNCTION_NAME }}'"
          echo "vars.AWS_REGION: '${{ vars.AWS_REGION }}'"
          echo "secrets.AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID && 'SET' || 'NOT_SET' }}'"
          echo "secrets.AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY && 'SET' || 'NOT_SET' }}'"
          echo "secrets.AWS_ROLE_ARN: '${{ secrets.AWS_ROLE_ARN && 'SET' || 'NOT_SET' }}'"
          echo "secrets.TEAMS_WEBHOOK_URL: '${{ secrets.TEAMS_WEBHOOK_URL && 'SET' || 'NOT_SET' }}'"

      - name: Deploy or Rollback Lambda Function
#        uses: jfarcas/lambda-deploy-action/actions/lambda-deploy@lambda-deploy-v2.0.0
        uses: jfarcas/lambda-deploy-action/actions/lambda-deploy@main
        env:
          # Required repository variables (original working configuration)
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION || 'eu-west-1' }}
          
          # Required AWS credentials
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          
          # Optional: Teams webhook for notifications
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        with:
          config-file: '.github/config/lambda-deploy-config.yml'
          environment: ${{ inputs.environment || 'auto' }}
          force-deploy: ${{ inputs.force_deploy || 'false' }}
          rollback-to-version: ${{ inputs.rollback_version }}
          debug: ${{ inputs.debug || 'false' }}

      - name: Deployment Summary
        if: success()
        run: |
          echo "## 🚀 Deployment Summary (Direct Action)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Method:** Direct Action Usage" >> $GITHUB_STEP_SUMMARY
          echo "- **Action:** \`jfarcas/lambda-deploy-action/actions/lambda-deploy@main\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Config:** \`.github/config/lambda-deploy-config.yml\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ inputs.environment || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          
          if [[ -n "${{ inputs.rollback_version }}" ]]; then
            echo "- **Action:** Rollback to v${{ inputs.rollback_version }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Action:** Normal deployment" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ inputs.force_deploy }}" == "true" ]]; then
            echo "- **Force Deploy:** Enabled" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Python Lambda deployment completed successfully using **Direct Action**" >> $GITHUB_STEP_SUMMARY
          echo "🐍 Runtime: Python 3.9" >> $GITHUB_STEP_SUMMARY
          echo "📦 Function: lambda-test-python" >> $GITHUB_STEP_SUMMARY
